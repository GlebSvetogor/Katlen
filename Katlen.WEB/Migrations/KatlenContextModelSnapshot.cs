// <auto-generated />
using System;
using Katlen.DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Katlen.WEB.Migrations
{
    [DbContext(typeof(KatlenContext))]
    partial class KatlenContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Katlen.DAL.Entities.CommentDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Katlen.DAL.Entities.OrderDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserDALId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserDALId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Katlen.DAL.Entities.ProductDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FullPrice")
                        .HasColumnType("int");

                    b.Property<string>("ImgSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderDALId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tall")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserDALId")
                        .HasColumnType("int");

                    b.Property<int?>("UserDALId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderDALId");

                    b.HasIndex("UserDALId");

                    b.HasIndex("UserDALId1");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Katlen.DAL.Entities.UserDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KatlenUsers");
                });

            modelBuilder.Entity("Katlen.DAL.Entities.CommentDAL", b =>
                {
                    b.HasOne("Katlen.DAL.Entities.ProductDAL", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Katlen.DAL.Entities.UserDAL", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Katlen.DAL.Entities.OrderDAL", b =>
                {
                    b.HasOne("Katlen.DAL.Entities.UserDAL", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserDALId");
                });

            modelBuilder.Entity("Katlen.DAL.Entities.ProductDAL", b =>
                {
                    b.HasOne("Katlen.DAL.Entities.OrderDAL", null)
                        .WithMany("Products")
                        .HasForeignKey("OrderDALId");

                    b.HasOne("Katlen.DAL.Entities.UserDAL", null)
                        .WithMany("Baskets")
                        .HasForeignKey("UserDALId");

                    b.HasOne("Katlen.DAL.Entities.UserDAL", null)
                        .WithMany("Likes")
                        .HasForeignKey("UserDALId1");
                });

            modelBuilder.Entity("Katlen.DAL.Entities.OrderDAL", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Katlen.DAL.Entities.ProductDAL", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Katlen.DAL.Entities.UserDAL", b =>
                {
                    b.Navigation("Baskets");

                    b.Navigation("Comments");

                    b.Navigation("Likes");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
